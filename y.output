Terminals unused in grammar

   '='


State 7 conflicts: 5 shift/reduce
State 9 conflicts: 5 shift/reduce
State 17 conflicts: 1 shift/reduce
State 24 conflicts: 4 shift/reduce
State 25 conflicts: 4 shift/reduce
State 45 conflicts: 5 shift/reduce, 11 reduce/reduce
State 46 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block
    2        | block program

    3 block: '(' stmtlist ')'

    4 stmtlist: stmtlist stmt
    5         | stmt

    6 stmt: assignment
    7     | if
    8     | while
    9     | expr

   10 assignment: SET VAR ID TO expr
   11           | SET VAR ID TO STRING

   12 if: IF expr THEN stmtlist END
   13   | IF expr THEN stmtlist ELSE stmtlist END

   14 while: WHILE expr DO stmtlist END

   15 expr: functioncall
   16     | expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr
   20     | '-' expr
   21     | '(' expr ')'
   22     | NUM
   23     | ID
   24     | STRING
   25     | STRING expr

   26 functioncall: ID expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 21
')' (41) 3 21
'*' (42) 18
'+' (43) 16
'-' (45) 17 20
'/' (47) 19
'=' (61)
error (256)
SET (258) 10 11
VAR (259) 10 11
TO (260) 10 11
IF (261) 12 13
THEN (262) 12 13
ELSE (263) 13
WHILE (264) 14
DO (265) 14
END (266) 12 13 14
ID (267) 10 11 23 26
NUM (268) 22
STRING (269) 11 24 25
UMINUS (270)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1 2, on right: 0 2
block (25)
    on left: 3, on right: 1 2
stmtlist (26)
    on left: 4 5, on right: 3 4 12 13 14
stmt (27)
    on left: 6 7 8 9, on right: 4 5
assignment (28)
    on left: 10 11, on right: 6
if (29)
    on left: 12 13, on right: 7
while (30)
    on left: 14, on right: 8
expr (31)
    on left: 15 16 17 18 19 20 21 22 23 24 25, on right: 9 10 12 13
    14 16 17 18 19 20 21 25 26
functioncall (32)
    on left: 26, on right: 15


State 0

    0 $accept: . program $end

    '('  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    3 block: '(' . stmtlist ')'

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmtlist      go to state 12
    stmt          go to state 13
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 2

    0 $accept: program . $end

    $end  shift, and go to state 19


State 3

    1 program: block .
    2        | block . program

    '('  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 20
    block    go to state 3


State 4

   10 assignment: SET . VAR ID TO expr
   11           | SET . VAR ID TO STRING

    VAR  shift, and go to state 21


State 5

   12 if: IF . expr THEN stmtlist END
   13   | IF . expr THEN stmtlist ELSE stmtlist END

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 22
    functioncall  go to state 18


State 6

   14 while: WHILE . expr DO stmtlist END

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 23
    functioncall  go to state 18


State 7

   23 expr: ID .
   26 functioncall: ID . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    ID        [reduce using rule 23 (expr)]
    NUM       [reduce using rule 23 (expr)]
    STRING    [reduce using rule 23 (expr)]
    '-'       [reduce using rule 23 (expr)]
    '('       [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)

    expr          go to state 24
    functioncall  go to state 18


State 8

   22 expr: NUM .

    $default  reduce using rule 22 (expr)


State 9

   24 expr: STRING .
   25     | STRING . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    ID        [reduce using rule 24 (expr)]
    NUM       [reduce using rule 24 (expr)]
    STRING    [reduce using rule 24 (expr)]
    '-'       [reduce using rule 24 (expr)]
    '('       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)

    expr          go to state 25
    functioncall  go to state 18


State 10

   20 expr: '-' . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 26
    functioncall  go to state 18


State 11

   21 expr: '(' . expr ')'

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 27
    functioncall  go to state 18


State 12

    3 block: '(' stmtlist . ')'
    4 stmtlist: stmtlist . stmt

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11
    ')'     shift, and go to state 28

    stmt          go to state 29
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 13

    5 stmtlist: stmt .

    $default  reduce using rule 5 (stmtlist)


State 14

    6 stmt: assignment .

    $default  reduce using rule 6 (stmt)


State 15

    7 stmt: if .

    $default  reduce using rule 7 (stmt)


State 16

    8 stmt: while .

    $default  reduce using rule 8 (stmt)


State 17

    9 stmt: expr .
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    '-'       [reduce using rule 9 (stmt)]
    $default  reduce using rule 9 (stmt)


State 18

   15 expr: functioncall .

    $default  reduce using rule 15 (expr)


State 19

    0 $accept: program $end .

    $default  accept


State 20

    2 program: block program .

    $default  reduce using rule 2 (program)


State 21

   10 assignment: SET VAR . ID TO expr
   11           | SET VAR . ID TO STRING

    ID  shift, and go to state 34


State 22

   12 if: IF expr . THEN stmtlist END
   13   | IF expr . THEN stmtlist ELSE stmtlist END
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    THEN  shift, and go to state 35
    '-'   shift, and go to state 30
    '+'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33


State 23

   14 while: WHILE expr . DO stmtlist END
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    DO   shift, and go to state 36
    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33


State 24

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   26 functioncall: ID expr .

    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    '-'       [reduce using rule 26 (functioncall)]
    '+'       [reduce using rule 26 (functioncall)]
    '*'       [reduce using rule 26 (functioncall)]
    '/'       [reduce using rule 26 (functioncall)]
    $default  reduce using rule 26 (functioncall)


State 25

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   25     | STRING expr .

    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    '-'       [reduce using rule 25 (expr)]
    '+'       [reduce using rule 25 (expr)]
    '*'       [reduce using rule 25 (expr)]
    '/'       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 26

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   20     | '-' expr .

    $default  reduce using rule 20 (expr)


State 27

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   21     | '(' expr . ')'

    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    ')'  shift, and go to state 37


State 28

    3 block: '(' stmtlist ')' .

    $default  reduce using rule 3 (block)


State 29

    4 stmtlist: stmtlist stmt .

    $default  reduce using rule 4 (stmtlist)


State 30

   17 expr: expr '-' . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 38
    functioncall  go to state 18


State 31

   16 expr: expr '+' . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 39
    functioncall  go to state 18


State 32

   18 expr: expr '*' . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 40
    functioncall  go to state 18


State 33

   19 expr: expr '/' . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 41
    functioncall  go to state 18


State 34

   10 assignment: SET VAR ID . TO expr
   11           | SET VAR ID . TO STRING

    TO  shift, and go to state 42


State 35

   12 if: IF expr THEN . stmtlist END
   13   | IF expr THEN . stmtlist ELSE stmtlist END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmtlist      go to state 43
    stmt          go to state 13
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 36

   14 while: WHILE expr DO . stmtlist END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmtlist      go to state 44
    stmt          go to state 13
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 37

   21 expr: '(' expr ')' .

    $default  reduce using rule 21 (expr)


State 38

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 17 (expr)


State 39

   16 expr: expr . '+' expr
   16     | expr '+' expr .
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 16 (expr)


State 40

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .
   19     | expr . '/' expr

    $default  reduce using rule 18 (expr)


State 41

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .

    $default  reduce using rule 19 (expr)


State 42

   10 assignment: SET VAR ID TO . expr
   11           | SET VAR ID TO . STRING

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 45
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    expr          go to state 46
    functioncall  go to state 18


State 43

    4 stmtlist: stmtlist . stmt
   12 if: IF expr THEN stmtlist . END
   13   | IF expr THEN stmtlist . ELSE stmtlist END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    ELSE    shift, and go to state 47
    WHILE   shift, and go to state 6
    END     shift, and go to state 48
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmt          go to state 29
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 44

    4 stmtlist: stmtlist . stmt
   14 while: WHILE expr DO stmtlist . END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    END     shift, and go to state 49
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmt          go to state 29
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 45

   11 assignment: SET VAR ID TO STRING .
   24 expr: STRING .
   25     | STRING . expr

    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    SET       reduce using rule 11 (assignment)
    SET       [reduce using rule 24 (expr)]
    IF        reduce using rule 11 (assignment)
    IF        [reduce using rule 24 (expr)]
    ELSE      reduce using rule 11 (assignment)
    ELSE      [reduce using rule 24 (expr)]
    WHILE     reduce using rule 11 (assignment)
    WHILE     [reduce using rule 24 (expr)]
    END       reduce using rule 11 (assignment)
    END       [reduce using rule 24 (expr)]
    ID        [reduce using rule 11 (assignment)]
    ID        [reduce using rule 24 (expr)]
    NUM       [reduce using rule 11 (assignment)]
    NUM       [reduce using rule 24 (expr)]
    STRING    [reduce using rule 11 (assignment)]
    STRING    [reduce using rule 24 (expr)]
    '-'       [reduce using rule 11 (assignment)]
    '-'       [reduce using rule 24 (expr)]
    '+'       reduce using rule 24 (expr)
    '*'       reduce using rule 24 (expr)
    '/'       reduce using rule 24 (expr)
    '('       [reduce using rule 11 (assignment)]
    '('       [reduce using rule 24 (expr)]
    ')'       reduce using rule 11 (assignment)
    ')'       [reduce using rule 24 (expr)]
    $default  reduce using rule 11 (assignment)

    expr          go to state 25
    functioncall  go to state 18


State 46

   10 assignment: SET VAR ID TO expr .
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '-'  shift, and go to state 30
    '+'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    '-'       [reduce using rule 10 (assignment)]
    $default  reduce using rule 10 (assignment)


State 47

   13 if: IF expr THEN stmtlist ELSE . stmtlist END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmtlist      go to state 50
    stmt          go to state 13
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 48

   12 if: IF expr THEN stmtlist END .

    $default  reduce using rule 12 (if)


State 49

   14 while: WHILE expr DO stmtlist END .

    $default  reduce using rule 14 (while)


State 50

    4 stmtlist: stmtlist . stmt
   13 if: IF expr THEN stmtlist ELSE stmtlist . END

    SET     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    END     shift, and go to state 51
    ID      shift, and go to state 7
    NUM     shift, and go to state 8
    STRING  shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    stmt          go to state 29
    assignment    go to state 14
    if            go to state 15
    while         go to state 16
    expr          go to state 17
    functioncall  go to state 18


State 51

   13 if: IF expr THEN stmtlist ELSE stmtlist END .

    $default  reduce using rule 13 (if)
